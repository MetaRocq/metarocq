{
	"folders": [
		{
			"path": ".."
		}
	],
	"settings": {

	// A list of arguments to send to coqtop. Use seperate elements instead of spaces to seperate each argument, especially when a flag expects another trailing argument, e.g. `["-I","./bin"]` instead of `["-I ./bin"]`
	"coqtop.args": [

		// "-bt", // get backtraces from Rocq on errors
		"-Q", "utils/theories", "MetaRocq.Utils",
		"-Q", "common/theories", "MetaRocq.Common",
		"-Q", "template-rocq/theories", "MetaRocq.Template",
		"-I", "template-rocq",
		"-I", "template-rocq/src",
		"-Q", "pcuic/theories", "MetaRocq.PCUIC",
		"-I", "pcuic",
		"-I", "pcuic/src",
		"-Q", "template-pcuic/theories", "MetaRocq.TemplatePCUIC",
		"-Q", "safechecker/theories", "MetaRocq.SafeChecker",
		"-Q", "safechecker-plugin/theories", "MetaRocq.SafeCheckerPlugin",
		"-I", "safechecker-plugin",
		"-I", "safechecker-plugin/src",
		"-Q", "erasure/theories", "MetaRocq.Erasure",
		"-Q", "erasure-plugin/theories", "MetaRocq.ErasurePlugin",
		"-I", "erasure-plugin",
		"-I", "erasure-plugin/src",
		"-Q", "translations", "MetaRocq.Translations",
		"-Q", "quotation/theories", "MetaRocq.Quotation",
		"-Q", "test-suite", "MetaRocq.TestSuite",
		"-Q", "test-suite/plugin-demo/theories", "MetaRocq.ExtractedPluginDemo",
		"-I", "test-suite/plugin-demo",
		"-I", "test-suite/plugin-demo/src",
		"-Q", "test-suite/loop-checking/theories", "MetaRocq.LoopChecking",
		"-I", "test-suite/loop-checking/src",
		"-Q", "examples", "MetaRocq.Examples",
	    ],
		"vscoq.args": [

		// "-bt", // get backtraces from Rocq on errors
		"-Q", "utils/theories", "MetaRocq.Utils",
		"-Q", "common/theories", "MetaRocq.Common",
		"-Q", "template-rocq/theories", "MetaRocq.Template",
		"-I", "template-rocq",
		"-I", "template-rocq/src",
		"-Q", "pcuic/theories", "MetaRocq.PCUIC",
		"-I", "pcuic",
		"-I", "pcuic/src",
		"-Q", "template-pcuic/theories", "MetaRocq.TemplatePCUIC",
		"-Q", "safechecker/theories", "MetaRocq.SafeChecker",
		"-Q", "safechecker-plugin/theories", "MetaRocq.SafeCheckerPlugin",
		"-I", "safechecker-plugin",
		"-I", "safechecker-plugin/src",
		"-Q", "erasure/theories", "MetaRocq.Erasure",
		"-Q", "erasure-plugin/theories", "MetaRocq.ErasurePlugin",
		"-I", "erasure-plugin",
		"-I", "erasure-plugin/src",
		"-Q", "translations", "MetaRocq.Translations",
		"-Q", "quotation/theories", "MetaRocq.Quotation",
		"-Q", "test-suite", "MetaRocq.TestSuite",
		"-Q", "test-suite/plugin-demo/theories", "MetaRocq.ExtractedPluginDemo",
		"-I", "test-suite/plugin-demo",
		"-I", "test-suite/plugin-demo/src",
		"-Q", "examples", "MetaRocq.Examples",
	    ],
	    "coq-lsp.args": [
				"-Q",
				"utils/theories,MetaRocq.Utils",
				"-Q",
				"common/theories,MetaRocq.Common",
				"-Q",
				"template-rocq/theories,MetaRocq.Template",
				"-Q",
				"pcuic/theories,MetaRocq.PCUIC",
				"-Q",
				"template-pcuic/theories,MetaRocq.TemplatePCUIC",
				"-Q",
				"safechecker/theories,MetaRocq.SafeChecker",
				"-Q",
				"safechecker-plugin/theories,MetaRocq.SafeCheckerPlugin",
				"-Q",
				"erasure/theories,MetaRocq.Erasure",
				"-Q",
				"erasure-plugin/theories,MetaRocq.ErasurePlugin",
				"-Q",
				"translations,MetaRocq.Translations",
				"-Q",
				"quotation/theories,MetaRocq.Quotation",
				"-Q",
				"test-suite,MetaRocq.TestSuite",
				"-Q",
				"test-suite/plugin-demo/theories,MetaRocq.ExtractedPluginDemo",
				"-Q",
				"examples,MetaRocq.Examples",
				"--ocamlpath=template-rocq,template-rocq/src,pcuic/src,safechecker-plugin/src,erasure-plugin/src,test-suite/plugin-demo/src"
			],
	 // When enabled, will trim trailing whitespace when saving a file.
	"files.trimTrailingWhitespace": true,
	"vscoq.path": "_opam/bin/vscoqtop",
	"coq-lsp.path": "_opam/bin/coq-lsp",
	"files.exclude": {
		"**/*.vo": true,
		"**/*.vok": true,
		"**/*.vos": true,
		"**/*.aux": true,
		"**/*.glob": true,
		"**/.git": true,
		"**/.svn": true,
		"**/.hg": true,
		"**/.DS_Store": true,
		"**/Thumbs.db": true,
		"**/CVS": true
	},
	"coq-lsp.check_only_on_request": false,
	"coqtop.binPath": "_opam/bin",
	"coqtop.coqtopExe": "coqtop",
	"coqtop.coqidetopExe": "coqidetop",
	"cSpell.enabledFileTypes": {
		"coq": false
	},
	"coq-lsp.show_universes_on_hover": false,
	"coq-lsp.pp_type": 1,
	"coq-lsp.heatmap.enabled": true,
	"coq-lsp.goal_after_tactic": true,
	"coq-lsp.messages_follow_goal": false,
	"coq-lsp.send_perf_data": false,
	"coq-lsp.admit_on_bad_qed": false,
	"coq-lsp.max_errors": 1,
  }
}
