{
	"folders": [
		{
			"path": ".."
		}
	],
	"settings": {

	// A list of arguments to send to coqtop. Use seperate elements instead of spaces to seperate each argument, especially when a flag expects another trailing argument, e.g. `["-I","./bin"]` instead of `["-I ./bin"]`
	"coqtop.args": [

		// "-bt", // get backtraces from Rocq on errors
		"-R", "utils/theories", "MetaRocq.Utils",
		"-R", "common/theories", "MetaRocq.Common",
		"-R", "template-rocq/theories", "MetaRocq.Template",
		"-I", "template-rocq",
		"-I", "template-rocq/src",
		"-R", "pcuic/theories", "MetaRocq.PCUIC",
		"-I", "pcuic",
		"-I", "pcuic/src",
		"-R", "template-pcuic/theories", "MetaRocq.TemplatePCUIC",
		"-R", "safechecker/theories", "MetaRocq.SafeChecker",
		"-R", "safechecker-plugin/theories", "MetaRocq.SafeCheckerPlugin",
		"-I", "safechecker-plugin",
		"-I", "safechecker-plugin/src",
		"-R", "erasure/theories", "MetaRocq.Erasure",
		"-R", "erasure-plugin/theories", "MetaRocq.ErasurePlugin",
		"-I", "erasure-plugin",
		"-I", "erasure-plugin/src",
		"-R", "translations", "MetaRocq.Translations",
		"-R", "quotation/theories", "MetaRocq.Quotation",
		"-R", "test-suite", "MetaRocq.TestSuite",
		"-R", "test-suite/plugin-demo/theories", "MetaRocq.ExtractedPluginDemo",
		"-I", "test-suite/plugin-demo",
		"-I", "test-suite/plugin-demo/src",
		"-R", "test-suite/loop-checking/theories", "MetaRocq.LoopChecking",
		"-I", "test-suite/loop-checking/src",
		"-R", "examples", "MetaRocq.Examples",
	    ],
		"vscoq.args": [

		// "-bt", // get backtraces from Rocq on errors
		"-R", "utils/theories", "MetaRocq.Utils",
		"-R", "common/theories", "MetaRocq.Common",
		"-R", "template-rocq/theories", "MetaRocq.Template",
		"-I", "template-rocq",
		"-I", "template-rocq/src",
		"-R", "pcuic/theories", "MetaRocq.PCUIC",
		"-I", "pcuic",
		"-I", "pcuic/src",
		"-R", "template-pcuic/theories", "MetaRocq.TemplatePCUIC",
		"-R", "safechecker/theories", "MetaRocq.SafeChecker",
		"-R", "safechecker-plugin/theories", "MetaRocq.SafeCheckerPlugin",
		"-I", "safechecker-plugin",
		"-I", "safechecker-plugin/src",
		"-R", "erasure/theories", "MetaRocq.Erasure",
		"-R", "erasure-plugin/theories", "MetaRocq.ErasurePlugin",
		"-I", "erasure-plugin",
		"-I", "erasure-plugin/src",
		"-R", "translations", "MetaRocq.Translations",
		"-R", "quotation/theories", "MetaRocq.Quotation",
		"-R", "test-suite", "MetaRocq.TestSuite",
		"-R", "test-suite/plugin-demo/theories", "MetaRocq.ExtractedPluginDemo",
		"-I", "test-suite/plugin-demo",
		"-I", "test-suite/plugin-demo/src",
		"-R", "examples", "MetaRocq.Examples",
	    ],
	    "coq-lsp.args": [
		// "-bt", // get backtraces from Rocq on errors
		"-R", "utils/theories,MetaRocq.Utils",
		"-R", "common/theories,MetaRocq.Common",
		"-R", "template-rocq/theories,MetaRocq.Template",
		"-I", "template-rocq",
		"-I", "template-rocq/src",
		"-R", "pcuic/theories,MetaRocq.PCUIC",
		"-I", "pcuic",
		"-I", "pcuic/src",
		"-R", "template-pcuic/theories,MetaRocq.TemplatePCUIC",
		"-R", "safechecker/theories,MetaRocq.SafeChecker",
		"-R", "safechecker-plugin/theories,MetaRocq.SafeCheckerPlugin",
		"-I", "safechecker-plugin",
		"-I", "safechecker-plugin/src",
		"-R", "erasure/theories,MetaRocq.Erasure",
		"-R", "erasure-plugin/theories,MetaRocq.ErasurePlugin",
		"-I", "erasure-plugin",
		"-I", "erasure-plugin/src",
		"-R", "translations,MetaRocq.Translations",
		"-R", "quotation/theories,MetaRocq.Quotation",
		"-R", "test-suite,MetaRocq.TestSuite",
		"-R", "test-suite/plugin-demo/theories,MetaRocq.ExtractedPluginDemo",
		"-I", "test-suite/plugin-demo",
		"-I", "test-suite/plugin-demo/src",
		"-R", "examples,MetaRocq.Examples",
	    ],
	 // When enabled, will trim trailing whitespace when saving a file.
	"files.trimTrailingWhitespace": true,
	"vscoq.path": "_opam/bin/vscoqtop",
	"coq-lsp.path": "_opam/bin/coq-lsp",
	"files.exclude": {
		"**/*.vo": true,
		"**/*.vok": true,
		"**/*.vos": true,
		"**/*.aux": true,
		"**/*.glob": true,
		"**/.git": true,
		"**/.svn": true,
		"**/.hg": true,
		"**/CVS": true,
		"**/.DS_Store": true,
		"**/Thumbs.db": true
	},
	"coq-lsp.check_only_on_request": true,
	"coqtop.binPath": "_opam/bin",
	"coqtop.coqtopExe": "coqtop",
	"coqtop.coqidetopExe": "coqidetop",
	"cSpell.enabledFileTypes": {
		"coq": false
	},
  }
}
